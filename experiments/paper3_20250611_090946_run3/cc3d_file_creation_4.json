{
  "timestamp": "2025-06-11T09:11:04.237588",
  "step": "cc3d_file_creation",
  "input": {
    "python_code": "from pybindCC3D import CompuCellSetup\nfrom cc3d.core.PySteppables import *\n\nclass OvarianEpithelialSimulation(SteppableBasePy):\n    def __init__(self, frequency=1):\n        SteppableBasePy.__init__(self, frequency)\n        \n    def start(self):\n        # Define cell types\n        self.epithelial_cell = self.new_cell_type(\"Epithelial_Ovary\", \"CL:0000066\")\n        self.mesothelial_cell = self.new_cell_type(\"Mesothelial\", \"CL:0000077\")\n        \n        # Set up parameters\n        self.cell_adhesion_params = {\n            \"Epithelial_Ovary\": {\"Epithelial_Ovary\": 10, \"Mesothelial\": 5},\n            \"Mesothelial\": {\"Epithelial_Ovary\": 5, \"Mesothelial\": 15}\n        }\n        \n        # Configure adhesion\n        for cell_type1, adhesion_dict in self.cell_adhesion_params.items():\n            for cell_type2, energy in adhesion_dict.items():\n                self.get_xml_element('Plugin', {'Name': 'Contact'})\\\n                    .getElement('Energy', {'Type1': cell_type1, 'Type2': cell_type2})\\\n                    .ElementCC3D('Energy', {}, str(energy))\n        \n        # Configure cell motility\n        self.get_xml_element('Plugin', {'Name': 'Chemotaxis'})\n        self.get_xml_element('Plugin', {'Name': 'Volume'})\n        \n    def step(self, mcs):\n        # Simulation logic for each step\n        for cell in self.cell_list:\n            if cell.type == self.epithelial_cell:\n                # Implement invasion behavior\n                if mcs % 100 == 0:\n                    self.invade_mesothelial(cell)\n            \n    def invade_mesothelial(self, cell):\n        # Simple invasion logic\n        target_cells = [neighbor for neighbor in self.get_cell_neighbors(cell) \n                       if neighbor and neighbor.type == self.mesothelial_cell]\n        if target_cells:\n            target = target_cells[0]\n            # Apply force to simulate invasion\n            self.apply_vector_force(cell, target, 0.1)\n            \n    def on_stop(self):\n        # Cleanup if needed\n        pass\n        \ndef configure_simulation():\n    from cc3d.CompuCellSetup import register_steppable\n    register_steppable(OvarianEpithelialSimulation(frequency=1))\n    \nconfigure_simulation()"
  },
  "output": {
    "output_file": "experiments\\paper3_20250611_090946_run3\\generated_cc3d_model.cc3d"
  }
}