{
  "timestamp": "2025-06-18T03:17:36.353291",
  "step": "cc3d_file_creation",
  "input": {
    "python_code": "from cc3d.core.PySteppables import *\n\nfrom CompuCell3D import CompuCellSetup\nfrom steppables import *\nfrom PySteppables import *\nimport sys\n\nclass EpithelialProliferationSimulation(SteppableBasePy):\n    def __init__(self, _simulator, _frequency=1):\n        SteppableBasePy.__init__(self, _simulator, _frequency)\n        self.simulator = _simulator\n        self.frequency = _frequency\n\n    def start(self):\n        # Initialize cells\n        cell = self.simulator.cellField\n        cell.defaultCellType = self.simulator.cellTypeDictionary['Epithelial']\n\n        # Add a single epithelial cell at the center\n        x = y = z = self.simulator.latticeSize.x // 2\n        cell(x, y, z).type = self.simulator.cellTypeDictionary['Epithelial']\n\n        # Set up cell proliferation parameters\n        self.simulator.addSteppable(_steppable=GrowthSteppable(\n            model_id='epithelial_growth',\n            cell_type='Epithelial',\n            target_volume=25,\n            growth_rate=0.1,\n            max_volume=100\n        ))\n\n        # Set up cell division\n        self.simulator.addSteppable(_steppable=MitosisSteppable(\n            model_id='epithelial_mitosis',\n            cell_type='Epithelial',\n            mitosis_distance=5,\n            mitosis_rate=0.1\n        ))\n\n    def step(self, mcs):\n        pass\n\n    def finish(self):\n        pass\n\ndef main():\n    # Set up simulation\n    sim = CompuCellSetup.Simulator()\n    sim.simulationDimensions.x = 100\n    sim.simulationDimensions.y = 100\n    sim.simulationDimensions.z = 1\n\n    # Set up cell types\n    sim.registerCellType(\n        cellType='Epithelial',\n        nucleus=CompuCellSetup.Nucleus(),\n        cellId=1\n    )\n\n    # Add simulation steppables\n    sim.addSteppable(EpithelialProliferationSimulation(sim, 1))\n\n    # Set up output\n    sim.addPottsTracker()\n    sim.addMitosisSteppable()\n\n    # Run simulation\n    sim.run(1000)\n\nif __name__ == '__main__':\n    main()"
  },
  "output": {
    "output_file": "experiments\\paper_12_Paper_12_0618_0315_run4\\generated_cc3d_model.cc3d"
  }
}