{
  "timestamp": "2025-06-17T23:26:10.628524",
  "step": "cc3d_file_creation",
  "input": {
    "python_code": "from cc3d.core.PySteppables import *\n\npython \n from  Com pu Cell Setup  import  *\n from  ste pp ables  import  *\n\n class  Simulation Ste pp able ( Ste pp able Base Py ):\n      def  __ init __( self ,  _ sim ulator ,  _ model ):\n          Ste pp able Base Py .__ init __( self ,  _ sim ulator ,  _ model )\n          self .sim ulator  =  _ sim ulator \n          self .model  =  _ model \n          self .name  =  \" Simulation Ste pp able \"\n          self  cells  =  []\n         \n          #  Initialize  cell  types  and  parameters \n          self .cell _types  =  {\n              ' Ep ith elial ':  {' id ':   1 ,  ' name ':  ' Ep ith elial ',  ' mot ility ':   1 . 0 ,  ' ad hesion ':   10 . 0 },\n              ' Mes ench ym al ':  {' id ':   2 ,  ' name ':  ' Mes ench ym al ',  ' mot ility ':   2 . 0 ,  ' ad hesion ':   5 . 0 }\n          }\n         \n          #  Initialize  simulation  parameters \n          self .sim ulation _parameters  =  {\n              ' time _step ':   1 . 0 ,\n              ' total _steps ':   100 0 ,\n              ' grid _size ':  ( 100 ,   100 ),\n              ' number _of _cells ':   100 ,\n              ' mot ility _baseline ':   1 . 0 ,\n              ' ad hesion _energy ':   10 . 0 ,\n              ' em t _probability ':   0 . 1 ,\n              ' em t _strength ':   5 . 0 \n          }\n\n      def  start (self ):\n          #  Initialize  cells \n          for  _  in  range (self .sim ulation _parameters [' number _of _cells ']):\n              cell  =  self .sim ulator .cell _field .new _cell (self .cell _types [' Ep ith elial '][' id '])\n              cell .position  =  self .sim ulator .get _random _position ()\n              self .cells .append (cell )\n             \n              #  Optionally  create  mes ench ym al  cells \n              if  _  %   2  ==   0 :\n                  cell  =  self .sim ulator .cell _field .new _cell (self .cell _types [' Mes ench ym al '][' id '])\n                  cell .position  =  self .sim ulator .get _random _position ()\n                  self .cells .append (cell )\n\n      def  step (self ,  m cs ):\n          #  Update  cell  positions  and  behaviors \n          for  cell  in  self .sim ulator .cell _field .cells :\n              #  Apply  mot ility \n              cell  mot ility  =  self .cell _types [cell .type _name ][' mot ility ']\n              cell .velocity  =  self .sim ulator .get _random _velocity (m ot ility )\n             \n              #  Apply  ad hesion \n              cell .ad hesion _energy  =  self .sim ulation _parameters [' ad hesion _energy ']\n             \n              #  Ep ith elial  to  Mes ench ym al  Transition  ( EM T )\n              if  cell .type _name  ==  ' Ep ith elial ':\n                  if  self .sim ulator .random _number ()  < self .sim ulation _parameters [' em t _probability ']:\n                      cell .type  =  self .cell _types [' Mes ench ym al '][' id ']\n                     \n          #  Update  simulation  state \n          self .sim ulator .update _cell _positions ()\n\n def  main ():\n      #  Create  simulation \n      simulator  =  Com pu Cell 3 D ()\n      model  =  simulator .model \n      model .initialize Simulation ()\n     \n      #  Add  ste pp able \n      simulation _ste pp able  =  Simulation Ste pp able (sim ulator ,  model )\n      model .add _ste pp able (sim ulation _ste pp able )\n     \n      #  Run  simulation \n      simulator .run ()\n     \n if  __ name __  ==  \"__ main __\":\n      main ()"
  },
  "output": {
    "output_file": "experiments\\week4-attempt15_20250617_232259_run2\\generated_cc3d_model.cc3d"
  }
}