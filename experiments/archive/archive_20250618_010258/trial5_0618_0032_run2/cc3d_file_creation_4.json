{
  "timestamp": "2025-06-18T00:34:34.119691",
  "step": "cc3d_file_creation",
  "input": {
    "python_code": "from cc3d.core.PySteppables import *\n\nfrom CompuCell3D import CompuCellSetup\nfrom steppables import SteppableBasePy\n\nclass NeurogenesisSimulation(SteppableBasePy):\n    def __init__(self, _simulator, _num_cells):\n        SteppableBasePy.__init__(self, _simulator)\n        self.simulator = _simulator\n        self.num_cells = _num_cells\n        self.simulation_name = \"NeurogenesisSimulation\"\n        self.duration = 1000  # Simulation duration in Monte Carlo steps\n        self.output_frequency = 100  # Output every 100 steps\n\n    def start(self):\n        # Initialize cell type and properties\n        cell_type = \"Neuron\"\n        cell_properties = {\n            \"cellType\": cell_type,\n            \"volume\": 1.0,\n            \"surface\": 1.0,\n            \"growthRate\": 0.1,\n            \"mitosisVolume\": 2.0,\n            \"mitosisSurface\": 2.0\n        }\n        \n        # Create initial cells\n        for _ in range(self.num_cells):\n            cell = self.simulator.createCell()\n            cell.cellType = cell_type\n            cell.volume = cell_properties[\"volume\"]\n            cell.surface = cell_properties[\"surface\"]\n            cell.growthRate = cell_properties[\"growthRate\"]\n            cell.mitosisVolume = cell_properties[\"mitosisVolume\"]\n            cell.mitosisSurface = cell_properties[\"mitosisSurface\"]\n            self.simulator.addCellToSimulation(cell)\n            \n        # Set up the simulation grid\n        self.simulator.setSimulationDimensions(50, 50, 50)\n        self.simulator.setBoundaryConditions('periodic')\n        \n    def step(self, mcs):\n        # Update cell growth and mitosis\n        for cell in self.simulator.cellList:\n            cell.volume += cell.growthRate\n            if cell.volume > cell.mitosisVolume:\n                self.simulator.divideCellRandomOrientation(cell)\n                \n        # Output simulation data\n        if mcs % self.output_frequency == 0:\n            self.simulator.printCellCounts()\n            \n# Run the simulation\nsim = CompuCellSetup.Simulator()\nsim.setSimulationName(\"NeurogenesisSimulation\")\nsim.setSimulationTime(1000)\nsim.addSteerable(NeurogenesisSimulation(sim, 50))\nsim.run()"
  },
  "output": {
    "output_file": "experiments\\trial5_0618_0032_run2\\generated_cc3d_model.cc3d"
  }
}