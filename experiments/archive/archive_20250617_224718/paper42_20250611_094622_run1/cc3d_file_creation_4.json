{
  "timestamp": "2025-06-11T09:47:38.877764",
  "step": "cc3d_file_creation",
  "input": {
    "python_code": "from cc3d.core.PySteppables import *\n\nfrom pybind11_tests import CompuCellSetup\nfrom PySteppables import *\nimport CompuCell\nimport sys\n\nclass KidneyDevelopmentSteppable(SteppableBasePy):\n    def __init__(self, _simulator, _frequency=1):\n        SteppableBasePy.__init__(self, _simulator, _frequency)\n        self.nephron_progenitor_type = None\n        self.ureteric_bud_type = None\n        \n    def start(self):\n        # Define cell types\n        self.nephron_progenitor_type = self.addCellType(\"NephronProgenitor\")\n        self.ureteric_bud_type = self.addCellType(\"UretericBud\")\n        \n        # Set up initial conditions\n        cell_field = self.potts.getCellField()\n        dim = cell_field.getDim()\n        \n        # Create nephron progenitor cells\n        for i in range(50):\n            cell = self.newCell(self.nephron_progenitor_type)\n            x = int(dim.x * 0.25 + random.random() * dim.x * 0.5)\n            y = int(dim.y * 0.25 + random.random() * dim.y * 0.5)\n            z = int(dim.z * 0.25 + random.random() * dim.z * 0.5)\n            cell.targetVolume = 25\n            cell.lambdaVolume = 2.0\n            cell_field.set(x, y, z, cell)\n        \n        # Create ureteric bud cells\n        for i in range(20):\n            cell = self.newCell(self.ureteric_bud_type)\n            x = int(dim.x * 0.75 + random.random() * dim.x * 0.2)\n            y = int(dim.y * 0.75 + random.random() * dim.y * 0.2)\n            z = int(dim.z * 0.75 + random.random() * dim.z * 0.2)\n            cell.targetVolume = 30\n            cell.lambdaVolume = 2.0\n            cell_field.set(x, y, z, cell)\n    \n    def step(self, mcs):\n        # Migration behavior for nephron progenitor cells\n        for cell in self.cellList:\n            if cell.type == self.nephron_progenitor_type:\n                # Random migration with slight bias toward ureteric bud\n                if mcs % 10 == 0:\n                    cell.lambdaVecX = -0.1  # slight bias toward left (ureteric bud side)\n                    cell.lambdaVecY = 0.0\n                    cell.lambdaVecZ = 0.0\n                    \n            elif cell.type == self.ureteric_bud_type:\n                # Branching behavior\n                if mcs % 100 == 0 and random.random() < 0.1:\n                    new_cell = self.newCell(self.ureteric_bud_type)\n                    new_cell.targetVolume = cell.targetVolume\n                    new_cell.lambdaVolume = cell.lambdaVolume\n                    # Place new cell near parent\n                    x, y, z = self.getCentroid(cell)\n                    self.cellField.set(x+1, y, z, new_cell)\n        \n        # Update volume constraints\n        for cell in self.cellList:\n            cell.targetVolume += 0.01  # gradual growth\n\n    def getCentroid(self, cell):\n        x, y, z = 0, 0, 0\n        count = 0\n        for pt in cell.getPixelList():\n            x += pt.pixel.x\n            y += pt.pixel.y\n            z += pt.pixel.z\n            count += 1\n        return x//count, y//count, z//count\n\nCompuCellSetup.registerSteppable(KidneyDevelopmentSteppable(_simulator=CompuCellSetup.getSimulator(), _frequency=1))"
  },
  "output": {
    "output_file": "experiments\\paper42_20250611_094622_run1\\generated_cc3d_model.cc3d"
  }
}