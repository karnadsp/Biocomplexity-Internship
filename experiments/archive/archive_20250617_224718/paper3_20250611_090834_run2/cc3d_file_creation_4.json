{
  "timestamp": "2025-06-11T09:09:46.843928",
  "step": "cc3d_file_creation",
  "input": {
    "python_code": "from cc3d.core.PySteppables import *\n\nfrom pyrcell3d import CompuCellSetup\nfrom PySteppables import SteppableBasePy\nimport CompuCell\n\nclass OvarianCancerInvasionSimulation(SteppableBasePy):\n    def __init__(self, _simulator, _frequency=1):\n        SteppableBasePy.__init__(self, _simulator, _frequency)\n        \n    def start(self):\n        # Initialize cell types\n        self.cellTypes = {\n            'OvarianCancerCell': self.createNewCellType(\"OvarianCancerCell\"),\n            'MesothelialCell': self.createNewCellType(\"MesothelialCell\")\n        }\n        \n        # Set cell type parameters\n        self.setCellTypeParameters(\"OvarianCancerCell\", {\n            'Volume': 50,\n            'LambdaVolume': 2.0,\n            'TargetVolume': 50,\n            'ChemotaxisLambda': 100,\n            'Chemotaxis': {'ChemicalField': 'Chemoattractant', 'Lambda': 100}\n        })\n        \n        self.setCellTypeParameters(\"MesothelialCell\", {\n            'Volume': 40,\n            'LambdaVolume': 2.0,\n            'TargetVolume': 40,\n            'AdhesionMolecules': {'Integrin': 10}\n        })\n        \n        # Initialize fields\n        self.addScalarFieldCellLevelPy(\"Chemoattractant\")\n        \n        # Create initial cell layout\n        for i in range(100):\n            cell = self.newCell(self.cellTypes['MesothelialCell'])\n            self.cellField[10 + i % 10, 10 + i // 10, 0] = cell\n        \n        for i in range(20):\n            cell = self.newCell(self.cellTypes['OvarianCancerCell'])\n            self.cellField[50 + i % 5, 50 + i // 5, 0] = cell\n    \n    def step(self, mcs):\n        # Update chemoattractant field\n        chemoattractant = self.getScalarFieldPy(\"Chemoattractant\")\n        for x, y, z in self.everyPixel():\n            if self.cellField[x, y, z] and self.cellField[x, y, z].type == self.cellTypes['OvarianCancerCell']:\n                chemoattractant[x, y, z] = 100\n            else:\n                chemoattractant[x, y, z] = max(0, chemoattractant[x, y, z] - 1)\n        \n        # Monitor cell migration and adhesion\n        if mcs % 100 == 0:\n            self.trackCellCounts()\n    \n    def trackCellCounts(self):\n        cancer_count = 0\n        meso_count = 0\n        for cell in self.cellList:\n            if cell.type == self.cellTypes['OvarianCancerCell']:\n                cancer_count += 1\n            elif cell.type == self.cellTypes['MesothelialCell']:\n                meso_count += 1\n        print(f\"Step {self.mcs}: Cancer cells={cancer_count}, Mesothelial cells={meso_count}\")\n\nCompuCellSetup.registerSteppable(steppable=OvarianCancerInvasionSimulation(_simulator=CompuCellSetup.getSimulator()))"
  },
  "output": {
    "output_file": "experiments\\paper3_20250611_090834_run2\\generated_cc3d_model.cc3d"
  }
}