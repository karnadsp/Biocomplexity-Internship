{
  "timestamp": "2025-06-11T09:12:16.095385",
  "step": "cc3d_file_creation",
  "input": {
    "python_code": "from cc3d.core.PySteppables import *\n\nfrom pybindCC3D import CompuCellSetup\nfrom PySteppables import *\nimport CompuCell\nimport sys\n\nclass OvarianCancerSimulation(SteppableBasePy):\n    def __init__(self, _simulator, _frequency=1):\n        SteppableBasePy.__init__(self, _simulator, _frequency)\n        \n    def start(self):\n        # Initialize cell types\n        self.mesothelial = self.addCellType(\"Mesothelial\")\n        self.cancer = self.addCellType(\"OvarianCancer\")\n        \n        # Set up parameters\n        self.cellField = self.potts.getCellField()\n        self.dim = self.cellField.getDim()\n        \n        # Configure cell properties\n        self.setCellTypeMotilityParameters()\n        self.setupInitialConditions()\n        \n    def setCellTypeMotilityParameters(self):\n        # Configure motility parameters\n        self.setMotilityParameters(self.mesothelial, 10, 0.5)\n        self.setMotilityParameters(self.cancer, 50, 0.8)\n        \n        # Configure adhesion parameters\n        self.setCellTypeAdhesionParameters()\n        \n    def setCellTypeAdhesionParameters(self):\n        # Set adhesion parameters between cell types and medium\n        self.setCellTypeAdhesion(self.mesothelial, \"Medium\", 10)\n        self.setCellTypeAdhesion(self.cancer, \"Medium\", 5)\n        \n        # Set adhesion between cell types\n        self.setCellTypeAdhesion(self.mesothelial, self.mesothelial, 20)\n        self.setCellTypeAdhesion(self.cancer, self.cancer, 15)\n        self.setCellTypeAdhesion(self.mesothelial, self.cancer, 8)\n        \n    def setupInitialConditions(self):\n        # Create initial cell layout\n        for x, y, z in self.everyPixel(10, 10, 1):\n            if x < self.dim.x/2:\n                cell = self.newCell(self.mesothelial)\n                self.cellField.set(x, y, z, cell)\n            else:\n                cell = self.newCell(self.cancer)\n                self.cellField.set(x, y, z, cell)\n                \n    def step(self, mcs):\n        # Implement simulation logic for each step\n        if mcs % 100 == 0:\n            self.updateCellBehaviors()\n            \n    def updateCellBehaviors(self):\n        # Update cell properties during simulation\n        for cell in self.cellList:\n            if cell.type == self.cancer:\n                # Increase cancer cell motility over time\n                self.setMotilityParameters(cell.type, 50 + mcs/10, 0.8)\n\nCompuCellSetup.registerSteppable(steppable=OvarianCancerSimulation(_simulator=CompuCellSetup.getSimulator(), _frequency=1))"
  },
  "output": {
    "output_file": "experiments\\paper3_20250611_091104_run4\\generated_cc3d_model.cc3d"
  }
}