{
  "timestamp": "2025-06-11T08:47:55.217655",
  "step": "cc3d_file_creation",
  "input": {
    "python_code": "from cc3d.core.PySteppables import *\nfrom cc3d.core.XMLUtils import ElementCC3D\n\nclass EpithelialLumenSimulation(SteppableBasePy):\n    def __init__(self, frequency=1):\n        super().__init__(frequency)\n        \n    def start(self):\n        # Create cell types\n        self.epithelial = self.new_cell_type(\"Epithelial\")\n        self.fibroblast = self.new_cell_type(\"Fibroblast\")\n        self.lumen = self.new_cell_type(\"Lumen\")\n        \n        # Set up initial configuration\n        self.build_cylindrical_segment()\n        \n        # Set cell parameters\n        self.set_cell_parameters()\n        \n    def build_cylindrical_segment(self):\n        # Create lumen (center of cylinder)\n        lumen_cells = self.cell_field_2D if self.dim == 2 else self.cell_field_3D\n        center = [dim//2 for dim in lumen_cells.dim]\n        radius = min(center) // 2\n        \n        for x, y, z in self.every_pixel():\n            dist = self.distance_from_center(x, y, z, center)\n            if dist < radius:\n                lumen_cells[x, y, z] = self.new_cell(self.lumen)\n                \n        # Create epithelial layer around lumen\n        epi_thickness = 5\n        for x, y, z in self.every_pixel():\n            dist = self.distance_from_center(x, y, z, center)\n            if radius <= dist < radius + epi_thickness:\n                lumen_cells[x, y, z] = self.new_cell(self.epithelial)\n                \n        # Create fibroblast layer around epithelium\n        fibro_thickness = 8\n        for x, y, z in self.every_pixel():\n            dist = self.distance_from_center(x, y, z, center)\n            if radius + epi_thickness <= dist < radius + epi_thickness + fibro_thickness:\n                lumen_cells[x, y, z] = self.new_cell(self.fibroblast)\n    \n    def distance_from_center(self, x, y, z, center):\n        if self.dim == 2:\n            return ((x - center[0])**2 + (y - center[1])**2)**0.5\n        else:\n            return ((x - center[0])**2 + (y - center[1])**2 + (z - center[2])**2)**0.5\n            \n    def set_cell_parameters(self):\n        # Set target volumes and adhesion parameters\n        self.set_cell_type_target_volume(self.epithelial, 25)\n        self.set_cell_type_target_volume(self.fibroblast, 30)\n        self.set_cell_type_target_volume(self.lumen, 0)  # Lumen should not grow\n        \n        # Set adhesion parameters\n        self.cell_type_contact_energy[self.epithelial][self.epithelial] = 2\n        self.cell_type_contact_energy[self.epithelial][self.fibroblast] = 4\n        self.cell_type_contact_energy[self.epithelial][self.lumen] = 10\n        self.cell_type_contact_energy[self.fibroblast][self.fibroblast] = 3\n        self.cell_type_contact_energy[self.fibroblast][self.lumen] = 10\n        self.cell_type_contact_energy[self.lumen][self.lumen] = 0\n        \n    def step(self, mcs):\n        # Add any dynamic behaviors here\n        pass"
  },
  "output": {
    "output_file": "experiments\\Attempt1_20250611_084647_run4\\generated_cc3d_model.cc3d"
  }
}