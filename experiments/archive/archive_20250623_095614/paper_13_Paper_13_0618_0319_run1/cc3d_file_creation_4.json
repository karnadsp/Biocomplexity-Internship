{
  "timestamp": "2025-06-18T03:20:59.073416",
  "step": "cc3d_file_creation",
  "input": {
    "python_code": "from cc3d.core.PySteppables import *\n\nfrom CompuCell3D import Simulation\nfrom steppables import SteppableBasePy\nimport numpy\n\nclass CellMigrationAndProliferationSimulation(SteppableBasePy):\n    def __init__(self, _simulator, _frequency=1):\n        SteppableBasePy.__init__(self, _simulator, _frequency)\n        self.simulator = _simulator\n        self.frequency = _frequency\n        \n    def start(self):\n        self.simulator.cellFieldG.typeManager.addType('Mesenchymal', 'CL:0000366')\n        self.simulator.cellFieldG.typeManager.addType('Epithelial', 'CL:0000057')\n        \n        # Initialize cell field with Mesenchymal and Epithelial cells\n        cell_type = self.simulator.cellFieldG.typeManager.getTypeId('Mesenchymal')\n        self.simulator.cellFieldG.initializeCellType(cell_type, 0, 0, 10, 10)\n        \n        cell_type = self.simulator.cellFieldG.typeManager.getTypeId('Epithelial')\n        self.simulator.cellFieldG.initializeCellType(cell_type, 20, 20, 30, 30)\n        \n        # Add mitosis steppable for cell division\n        mitosis_steppable = Mitosis(self.simulator, 10)\n        self.simulator.addSteppingCaretaker(mitosis_steppable)\n        \n    def step(self, mcs):\n        # Simulate cell migration\n        for cell in self.simulator.cellList:\n            if cell.type == self.simulator.cellFieldG.typeManager.getTypeId('Mesenchymal'):\n                # Mesenchymal cells exhibit random migration\n                dx = numpy.random.uniform(-1, 1)\n                dy = numpy.random.uniform(-1, 1)\n                cell.x += dx\n                cell.y += dy\n                \n            elif cell.type == self.simulator.cellFieldG.typeManager.getTypeId('Epithelial'):\n                # Epithelial cells exhibit collective migration\n                pass  # Implement collective migration logic here\n                \nclass Mitosis(SteppableBasePy):\n    def __init__(self, _simulator, _frequency):\n        SteppableBasePy.__init__(self, _simulator, _frequency)\n        self.simulator = _simulator\n        self.frequency = _frequency\n        \n    def start(self):\n        pass\n        \n    def step(self, mcs):\n        for cell in self.simulator.cellList:\n            if cell.type == self.simulator.cellFieldG.typeManager.getTypeId('Mesenchymal'):\n                # Mesenchymal cells proliferate\n                if numpy.random.random() < 0.1:\n                    self.simulator.divideCell(cell)\n                    \n            elif cell.type == self.simulator.cellFieldG.typeManager.getTypeId('Epithelial'):\n                # Epithelial cells proliferate\n                if numpy.random.random() < 0.05:\n                    self.simulator.divideCell(cell)\n\n# Create simulation\nsim = Simulation()\nsim.setSimulationParameters(_simulation_name=\"CellMigrationAndProliferation\", \n                            _steps=1000, \n                            _min_mcs=0, \n                            _max_mcs=1000)\n\n# Add steppables\nsim.addSteppingCaretaker(CellMigrationAndProliferationSimulation(sim, 1))"
  },
  "output": {
    "output_file": "experiments\\paper_13_Paper_13_0618_0319_run1\\generated_cc3d_model.cc3d"
  }
}