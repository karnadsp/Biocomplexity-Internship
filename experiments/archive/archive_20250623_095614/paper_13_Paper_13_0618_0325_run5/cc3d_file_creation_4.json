{
  "timestamp": "2025-06-18T03:26:49.491745",
  "step": "cc3d_file_creation",
  "input": {
    "python_code": "from cc3d.core.PySteppables import *\n\nfrom CompuCellSetup import Simulator\nfrom steppables import SteppableBasePy, Mitosis\n\nclass EpithelialProliferationSimulation(SteppableBasePy):\n    def __init__(self, _simulator, _numEpithelialCells):\n        SteppableBasePy.__init__(self, _simulator)\n        self.numEpithelialCells = _numEpithelialCells\n        self.simulator = _simulator\n        self cellTypes = {'Epithelial': 1}\n        self.cellType = self.cellTypes['Epithelial']\n        self.epithelialColor = [255, 255, 0]  # Yellow color for epithelial cells\n        self ep = 0.001  # Stiffness parameter\n        self.rep = 0.01  # Repulsion parameter\n        self.numSteps = 1000  # Total simulation steps\n\n    def start(self):\n        # Initialize simulation with epithelial cells\n        self.simulator.addSteppable(Mitosis())\n        for _ in range(self.numEpithelialCells):\n            cell = self.simulator.createCell(self.cellType)\n            cell.color = self.epithelialColor\n            cell.properties[Simulator.EP] = self.ep\n            cell.properties[Simulator.REP] = self.rep\n            self.simulator.addCellToLattice(cell, (0,0,0))\n\n    def step(self, mcs):\n        # Check if cells should divide based on cell cycle\n        if mcs > 100:\n            for cell in self.simulator.cellList:\n                if cell.type == self.cellType and cell.age > 20:\n                    cell.divide()\n\n    def finish(self):\n        # Output final cell count\n        print(\"Final number of epithelial cells: \", len([cell for cell in self.simulator.cellList if cell.type == self.cellType]))\n\ndef count_epithelial_cells(simulator):\n    return len([cell for cell in simulator.cellList if cell.type == 1])\n\nsim = Simulator()\nsim.simulation_name = \"EpithelialProliferation\"\nsim.simulation_dims = [100, 100, 1]\nsim.num_steps = 1000\nsim.save_output_frequency = 100\nsim.add_steppable(EpithelialProliferationSimulation(sim, 10))\nsim.run()"
  },
  "output": {
    "output_file": "experiments\\paper_13_Paper_13_0618_0325_run5\\generated_cc3d_model.cc3d"
  }
}