{
  "timestamp": "2025-06-18T02:20:34.216923",
  "step": "cc3d_file_creation",
  "input": {
    "python_code": "from cc3d.core.PySteppables import *\n\nfrom CompuCell3D import CompuCellSetup, Simulation\nfrom steppables import SteppableBasePy, ModelSteppablePy\nfrom cell import Cell\nfrom cell_type import CellType\n\nclass EMTSimulation(SteppableBasePy):\n    def __init__(self, _simulator, _model):\n        super(EMTSimulation, self).__init__(_simulator, _model)\n        self.simulator = _simulator\n        self.model = _model\n        self.step_number = 0\n        self.num_steps = 1000  # Total number of simulation steps\n\n    def start(self):\n        # Initialize cell types\n        self.cell_type_mesenchymal = CellType('Mesenchymal', color=[255, 0, 0])\n        self.cell_type_epithelial = CellType('Epithelial', color=[0, 0, 255])\n\n        # Add cell types to the simulation\n        self.simulator.add_cell_type(self.cell_type_mesenchymal)\n        self.simulator.add_cell_type(self.cell_type_epithelial)\n\n        # Initialize EMT steppable\n        emt_steppable = EMTSteppable(self.simulator, self.model)\n        self.simulator.add_steppable(emt_steppable)\n\n        # Initialize Migration steppable\n        migration_steppable = MigrationSteppable(self.simulator, self.model)\n        self.simulator.add_steppable(migration_steppable)\n\n    def step(self):\n        self.step_number += 1\n        if self.step_number >= self.num_steps:\n            self.simulator.stop()\n\nclass EMTSteppable(SteppableBasePy):\n    def __init__(self, _simulator, _model):\n        super(EMTSteppable, self).__init__(_simulator, _model)\n        self.emt_probability = 0.1  # Probability of EMT per cell per step\n\n    def step(self):\n        # Iterate through all epithelial cells and apply EMT\n        for cell in self.simulator.get_cells_by_type('Epithelial'):\n            if self.model.random() < self.emt_probability:\n                # Change cell type to Mesenchymal\n                cell.type = self.simulator.get_cell_type('Mesenchymal')\n\nclass MigrationSteppable(SteppableBasePy):\n    def __init__(self, _simulator, _model):\n        super(MigrationSteppable, self).__init__(_simulator, _model)\n        self.migration_speed = 0.5  # Migration speed parameter\n\n    def step(self):\n        # Iterate through all mesenchymal cells and apply migration\n        for cell in self.simulator.get_cells_by_type('Mesenchymal'):\n            # Apply random movement forces\n            forces = self.model.random_vector(self.migration_speed)\n            cell.lambda_force = forces\n\n# Create simulation\nsim = Simulation()\nsim.setSimulationName(\"EMT_Migration\")\nsim.setSimulationOutput(\"EMT_Migration_output/\", 100)\n\n# Add the main simulation class\nsim.setMainSteppable(EMTSimulation(sim, sim))\n\n# Run simulation\nsim.run()"
  },
  "output": {
    "output_file": "experiments\\paper_05_Paper_5_0618_0218_run4\\generated_cc3d_model.cc3d"
  }
}