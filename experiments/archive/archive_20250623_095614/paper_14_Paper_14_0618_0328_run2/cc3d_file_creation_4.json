{
  "timestamp": "2025-06-18T03:30:45.288895",
  "step": "cc3d_file_creation",
  "input": {
    "python_code": "from cc3d.core.PySteppables import *\n\nfrom CompuCell3D import CompuCellSetup\nfrom steppables import SteppableBasePy\n\nclass Simulation(SteppableBasePy):\n    def __init__(self, _simulator, _frequency=1):\n        SteppableBasePy.__init__(self, _simulator, _frequency)\n        self.simulator = _simulator\n        self.frequency = _frequency\n        self.simulatorThread = _simulator.simulatorThread\n        \n    def start(self):\n        self.simulator.getNewCellId(\"Epithelial\")\n        self.cell_field = self.simulator.cellField\n        self.simulator.addSteppable(self)\n        \n    def step(self, mcs):\n        cells = self.cell_field.cells\n        for cell in cells:\n            if cell.type == 1:  # Epithelial cell type\n                if self.simulator.randomNumber(0,1) < 0.01:  # Proliferation probability\n                    neighbor = self.simulator.getNeighbor(cell, [0,0,0])\n                    if neighbor is None:\n                        new_cell = self.simulator.getNewCellId(\"Epithelial\")\n                        self.simulator.cellField.updateCellGrid(new_cell, cell.x + 1, cell.y, cell.z)\n                        self.simulator.cellField.updateCellGrid(new_cell, cell.x - 1, cell.y, cell.z)\n                        self.simulator.cellField.updateCellGrid(new_cell, cell.x, cell.y + 1, cell.z)\n                        self.simulator.cellField.updateCellGrid(new_cell, cell.x, cell.y - 1, cell.z)\n                        self.simulator.cellField.updateCellGrid(new_cell, cell.x, cell.y, cell.z + 1)\n                        self.simulator.cellField.updateCellGrid(new_cell, cell.x, cell.y, cell.z - 1)\n                        self.simulator.cellField.updateCellGrid(new_cell, cell.x + 1, cell.y + 1, cell.z)\n                        self.simulator.cellField.updateCellGrid(new_cell, cell.x - 1, cell.y - 1, cell.z)\n                        self.simulator.cellField.updateCellGrid(new_cell, cell.x, cell.y + 1, cell.z + 1)\n                        self.simulator.cellField.updateCellGrid(new_cell, cell.x, cell.y - 1, cell.z - 1)\n                        self.simulator.cellField.updateCellGrid(new_cell, cell.x + 1, cell.y, cell.z + 1)\n                        self.simulator.cellField.updateCellGrid(new_cell, cell.x - 1, cell.y, cell.z - 1)\n                        self.simulator.cellField.updateCellGrid(new_cell, cell.x + 1, cell.y - 1, cell.z + 1)\n                        self.simulator.cellField.updateCellGrid(new_cell, cell.x - 1, cell.y + 1, cell.z - 1)\n                        self.simulator.cellField.updateCellGrid(new_cell, cell.x + 1, cell.y + 1, cell.z - 1)\n                        self.simulator.cellField.updateCellGrid(new_cell, cell.x - 1, cell.y - 1, cell.z + 1)\n                        self.simulator.cellField.updateCellGrid(new_cell, cell.x, cell.y, cell.z)\n                        self.simulator.cellField.updateCellGrid(new_cell, cell.x + 1, cell.y, cell.z)\n                        self.simulator.cellField.updateCellGrid(new_cell, cell.x - 1, cell.y, cell.z)\n                        self.simulator.cellField.updateCellGrid(new_cell, cell.x, cell.y + 1, cell.z)\n                        self.simulator.cellField.updateCellGrid(new_cell, cell.x, cell.y - 1, cell.z)\n                        self.simulator.cellField.updateCellGrid(new_cell, cell.x, cell.y, cell.z + 1)\n                        self.simulator.cellField.updateCellGrid(new_cell, cell.x, cell.y, cell.z - 1)\n                        self.simulator.cellField.updateCellGrid(new_cell, cell.x + 1, cell.y + 1, cell.z)\n                        self.simulator.cellField.updateCellGrid(new_cell, cell.x - 1, cell.y - 1, cell.z)\n                        self.simulator.cellField.updateCellGrid(new_cell, cell.x, cell.y + 1, cell.z + 1)\n                        self.simulator.cellField.updateCellGrid(new_cell, cell.x, cell.y - 1, cell.z - 1)\n                        self.simulator.cellField.updateCellGrid(new_cell, cell.x + 1, cell.y, cell.z + 1)\n                        self.simulator.cellField.updateCellGrid(new_cell, cell.x - 1, cell.y, cell.z - 1)\n                        self.simulator.cellField.updateCellGrid(new_cell, cell.x + 1, cell.y - 1, cell.z + 1)\n                        self.simulator.cellField.updateCellGrid(new_cell, cell.x - 1, cell.y + 1, cell.z - 1)\n                        self.simulator.cellField.updateCellGrid(new_cell, cell.x + 1, cell.y + 1, cell.z - 1)\n                        self.simulator.cellField.updateCellGrid(new_cell, cell.x - 1, cell.y - 1, cell.z + 1)\n\nCompuCellSetup.simulator = Simulator()\nCompuCellSetup.simulator.addSteppable(Simulation(CompuCellSetup.simulator, 1))\nCompuCellSetup.simulator.addSteppable(ProteinField(CompuCellSetup.simulator, 1))\nCompuCellSetup.simulator.addSteppable(ProliferationParameters(CompuCellSetup.simulator, 1))"
  },
  "output": {
    "output_file": "experiments\\paper_14_Paper_14_0618_0328_run2\\generated_cc3d_model.cc3d"
  }
}