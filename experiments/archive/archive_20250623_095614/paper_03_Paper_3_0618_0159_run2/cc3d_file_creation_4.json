{
  "timestamp": "2025-06-18T02:00:40.411227",
  "step": "cc3d_file_creation",
  "input": {
    "python_code": "from cc3d.core.PySteppables import *\n\nfrom CompuCell3D import CompuCellSetup\nfrom steppables import SteppableBasePy\nimport numpy as np\n\nclass EpithelialProliferationSimulation(SteppableBasePy):\n    def __init__(self, _simulator, _numIterations=1):\n        super(EpithelialProliferationSimulation, self).__init__(_simulator)\n        self.simulator = _simulator\n        self.numIterations = _numIterations\n        self.simulator.setSimulationDuration(1000, 1000)\n        \n    def start(self):\n        self.simulator.getVisualization().show()\n        self.cell_field = self.simulator.get_cell_field()\n        self.cell_field.initialize()\n        self.simulator.get_cell_field().set_default_cell_type('Epithelial')\n        self.simulator.get_cell_field().generate_cells_from_lattice(\n            number_of_cells_per_type={'Epithelial': 100},\n            lattice_type='hex',\n            spacing=1.0\n        )\n        \n    def step(self, mcs):\n        if mcs == 100:\n            self.simulator.get_cell_field().generate_cells_from_lattice(\n                number_of_cells_per_type={'Epithelial': 50},\n                lattice_type='hex',\n                spacing=1.0\n            )\n            \n        for cell in self.simulator.get_cell_field().get_all_cells():\n            if cell.type == 'Epithelial':\n                if cell.volume > 100:\n                    cell.divide()\n                    \n        self.simulator.get_cell_field().set_cell_type_parameters(\n            cell_type='Epithelial',\n            parameters={\n                'stiffness': 100.0,\n                'adhesion': 10.0\n            }\n        )\n\ndef main():\n    simulator = CompuCellSetup.Simulator()\n    simulator.setSimulationDimensions(50, 50, 1)\n    simulator.setSimulationTime(1, 1000)\n    \n    simulator.add_steerable('EpithelialProliferationSimulation', EpithelialProliferationSimulation())\n    \n    simulator.run()\n\nif __name__ == \"__main__\":\n    main()"
  },
  "output": {
    "output_file": "experiments\\paper_03_Paper_3_0618_0159_run2\\generated_cc3d_model.cc3d"
  }
}