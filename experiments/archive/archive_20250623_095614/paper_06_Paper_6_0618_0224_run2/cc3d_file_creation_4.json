{
  "timestamp": "2025-06-18T02:26:22.187491",
  "step": "cc3d_file_creation",
  "input": {
    "python_code": "from cc3d.core.PySteppables import *\n\nfrom CompuCell3D import CompuCellSetup\nfrom PySteppables import Steppables, SteppableBasePy\nfrom PySteppables import ImportSimulation\nfrom PySteppables import Visualization\nfrom PySteppables import FileOutput\nfrom PySteppables import Inventory\n\nclass CellDivisionSimulation(SteppableBasePy):\n    def __init__(self, _simulator, _frequency=1):\n        SteppableBasePy.__init__(self, _simulator, _frequency)\n        self.simulator = _simulator\n        self.inventory = self.simulator.getInventory()\n        self.cell_count = 0\n        self.ontology = {'CellOntology': 'Epithelial', 'GeneOntology': 'Cell Division', 'MeSH': 'Cell Proliferation'}\n        self.cell_cycle_duration = 100  # Duration of cell cycle before division\n        self.initial_cell_count = 1  # Starting number of cells\n\n    def start(self):\n        # Initialize simulation with a single epithelial cell\n        self.cell_count = self.initial_cell_count\n        self.create_epithelial_cell()\n        self.setup_visualization()\n        self.setup_output()\n\n    def step(self):\n        # Check each cell for division eligibility\n        for cell in self.inventory.cells:\n            if cell.type == self.ontology['CellOntology'] and cell.age > self.cell_cycle_duration:\n                self.divide_cell(cell)\n                self.cell_count += 1\n        self.output_cell_count()\n\n    def create_epithelial_cell(self):\n        # Create a single epithelial cell at the center of the simulation\n        cell = self.inventory.createCell(self.ontology['CellOntology'], self.simulator)\n        cell.position = (self.simulator.xCOM, self.simulator.yCOM, self.simulator.zCOM)\n        cell.age = 0\n        self.inventory.addCell(cell)\n\n    def divide_cell(self, cell):\n        # Divide the cell into two daughter cells\n        new_cell = self.inventory.createCell(self.ontology['CellOntology'], self.simulator)\n        new_cell.position = (cell.position[0] + 1, cell.position[1], cell.position[2])\n        new_cell.age = 0\n        self.inventory.addCell(new_cell)\n        cell.age = 0\n\n    def setup_visualization(self):\n        # Set up visualization properties\n        self.simulator.setFieldSecretion(self.ontology['CellOntology'], 0)\n        self.simulator.setVolumeSecretion(self.ontology['CellOntology'], 0)\n        self.simulator.setSurfaceSecretion(self.ontology['CellOntology'], 0)\n\n    def setup_output(self):\n        # Set up file output for cell count tracking\n        file_handler = FileOutput()\n        file_handler.setFileName(\"cell_count\")\n        file_handler.setColumnHeaders([\"Step\", \"Cell Count\"])\n        self.simulator.addFileOutput(file_handler)\n\n    def output_cell_count(self):\n        # Output current cell count to file\n        file_output = self.simulator.getFileOutput(\"cell_count\")\n        file_output.write(f\"{self.simulator.step}{self.delimiter}{self.cell_count}\\n\")\n\n# Create simulation instance\nsim = CompuCellSetup.Simulator()\nsim.init()\n\n# Add steppables\nsteppable = CellDivisionSimulation(sim)\nsteppables = Steppables()\nsteppables.addSteppable(steppable)\nsim.addSteppables(steppables)\n\n# Run simulation\nsim.run(1000)"
  },
  "output": {
    "output_file": "experiments\\paper_06_Paper_6_0618_0224_run2\\generated_cc3d_model.cc3d"
  }
}