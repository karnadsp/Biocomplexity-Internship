{
  "timestamp": "2025-06-18T02:43:28.245601",
  "step": "cc3d_file_creation",
  "input": {
    "python_code": "from cc3d.core.PySteppables import *\n\nfrom CompuCell3D import CompuCellSetup\nfrom steppables import SteppableBasePy\n\nclass EpithelialProliferationSimulation(SteppableBasePy):\n    def __init__(self, _simulator, _simulation_name):\n        SteppableBasePy.__init__(self, _simulator, _simulation_name)\n        self.simulator = _simulator\n        self.simulation_name = _simulation_name\n        self.simulation_duration = 1000  # Simulation duration in Monte Carlo steps\n        \n    def start(self):\n        # Initialize simulation\n        self.simulator.getSimulationObject().setSimulationDuration(self.simulation_duration)\n        \n        # Create a grid\n        self.simulator.getSimulationObject().createGrid()\n        \n        # Add cell types\n        self.epithelial_cell = self.simulator.getSimulationObject().getCellType(\"Epithelial\")\n        \n        # Set initial cell properties\n        self.epithelial_cell.setDiameter(1.0)\n        self.epithelial_cell.setElasticity(1.0)\n        self.epithelial_cell.setProliferationRate(0.1)\n        \n        # Initialize cell positions\n        self.simulator.getSimulationObject().initializeCells()\n        \n    def step(self, mcs):\n        # Calculate remaining simulation time\n        time_remaining = self.simulation_duration - mcs\n        \n        # Print progress\n        print(f\"Simulation progress: {mcs}/{self.simulation_duration}\")\n        \n        # Simple cell proliferation logic\n        if mcs % 100 == 0:\n            self.epithelial_cell.setProliferationRate(self.epithelial_cell.getProliferationRate() * 1.1)\n            \n        # Mitosis event\n        if mcs >= 500 and mcs % 50 == 0:\n            cell_id = self.simulator.getSimulationObject().findCellById(1)\n            if cell_id:\n                self.simulator.getSimulationObject().mitosis(cell_id)\n\ndef main():\n    # Create simulation\n    simulator = CompuCellSetup.Simulator()\n    \n    # Add steppable\n    simulation = EpithelialProliferationSimulation(simulator, \"EpithelialProliferation\")\n    simulator.addSteppable(simulation)\n    \n    # Configure solver\n    simulator.getSimulationObject().setSolver(\"DiffusionSolver\")\n    \n    # Run simulation\n    simulator.run(1000)\n\nif __name__ == \"__main__\":\n    main()"
  },
  "output": {
    "output_file": "experiments\\paper_08_Paper_8_0618_0241_run3\\generated_cc3d_model.cc3d"
  }
}