{
  "timestamp": "2025-06-18T03:05:17.045317",
  "step": "cc3d_file_creation",
  "input": {
    "python_code": "from cc3d.core.PySteppables import *\n\nfrom CompuCellSetup import *\nimport CompuCell\nimport numpy as np\nfrom steppables import *\nfrom PySteppables import *\n\nclass Simulation(SteppableBasePy):\n    def __init__(self, _simulator, _frequency=1):\n        SteppableBasePy.__init__(self, _simulator, _frequency)\n        self.simulator = _simulator\n        self.frequency = _frequency\n        \n        # Cell type definitions\n        self.cellType = {'Epithelial': 1, 'Mesenchymal': 2}\n        \n        # Gene expression parameters\n        self.apoptosis_params = {'Epithelial': {'probability': 0.01},\n                                'Mesenchymal': {'probability': 0.005}}\n        \n        self.cell_division_params = {'Epithelial': {'duration': 10},\n                                   'Mesenchymal': {'duration': 15}}\n        \n        # Cell proliferation parameters\n        self.growth_rate = {'Epithelial': 0.02, 'Mesenchymal': 0.015}\n        \n        # Simulation parameters\n        self.simulation_duration = 1000\n        \n    def start(self):\n        # Initialize grid dimensions\n        self.simulator.getCompuCell().setSimulationDimensions(100, 100, 1)\n        \n        # Create cell objects\n        self.create_cells()\n        \n    def step(self, mcs):\n        # Update cell positions and states\n        self.update_cell_positions()\n        \n        # Handle cell division and apoptosis\n        self.handle_cell_behavior()\n        \n        # Check simulation termination\n        if mcs >= self.simulation_duration:\n            self.simulator.stopSimulation()\n            \n    def create_cells(self):\n        # Create Epithelial cells\n        for i in range(10):\n            cell = self.simulator.createCell(self.cellType['Epithelial'])\n            cell.position = [np.random.randint(0, 100), np.random.randint(0, 100), 0]\n            cell.dict['apoptosis'] = self.apoptosis_params['Epithelial']['probability']\n            cell.dict['division_time'] = self.cell_division_params['Epithelial']['duration']\n            cell.dict['growth_rate'] = self.growth_rate['Epithelial']\n        \n        # Create Mesenchymal cells\n        for i in range(10):\n            cell = self.simulator.createCell(self.cellType['Mesenchymal'])\n            cell.position = [np.random.randint(0, 100), np.random.randint(0, 100), 0]\n            cell.dict['apoptosis'] = self.apoptosis_params['Mesenchymal']['probability']\n            cell.dict['division_time'] = self.cell_division_params['Mesenchymal']['duration']\n            cell.dict['growth_rate'] = self.growth_rate['Mesenchymal']\n            \n    def update_cell_positions(self):\n        for cell in self.simulator.cellList:\n            if cell.type == self.cellType['Epithelial']:\n                # Epithelial cell behavior\n                pass\n            elif cell.type == self.cellType['Mesenchymal']:\n                # Mesenchymal cell behavior\n                pass\n                \n    def handle_cell_behavior(self):\n        for cell in self.simulator.cellList:\n            if cell.type == self.cellType['Epithelial']:\n                # Handle Epithelial cell behavior\n                pass\n            elif cell.type == self.cellType['Mesenchymal']:\n                # Handle Mesenchymal cell behavior\n                pass\n                \n    def count_cells(self):\n        cell_counts = {'Epithelial': 0, 'Mesenchymal': 0}\n        for cell in self.simulator.cellList:\n            if cell.type == self.cellType['Epithelial']:\n                cell_counts['Epithelial'] += 1\n            elif cell.type == self.cellType['Mesenchymal']:\n                cell_counts['Mesenchymal'] += 1\n        return cell_counts\n\ndef main():\n    simulator = CompuCell.getSimulator()\n    simulation = Simulation(simulator)\n    simulator.addSteppable(simulation)\n    simulator.run()\n    \nif __name__ == \"__main__\":\n    main()"
  },
  "output": {
    "output_file": "experiments\\paper_11_Paper_11_0618_0302_run1\\generated_cc3d_model.cc3d"
  }
}