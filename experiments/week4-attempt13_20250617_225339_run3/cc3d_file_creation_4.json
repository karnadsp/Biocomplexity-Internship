{
  "timestamp": "2025-06-17T22:55:27.017095",
  "step": "cc3d_file_creation",
  "input": {
    "python_code": "from cc3d.core.PySteppables import *\n\npythonfromCompuCellSetupimportSimulatorfromsteppablesimportSteppableBasePy ,  ModelimportnumpyasnpclassEMTAndCellMigrationSimulation(SteppableBasePy):\n      def__init__(self ,  _simulator ,  _model):\n          super(EMTAndCellMigrationSimulation ,  self).__init __(_simulator ,  _model)\n          self .simulator=_simulatorself .model=_modelself .simulation_name=\" EMTAndCellMigration \"\n          self .configuration_file=\" EMTAndCellMigration .xml \"\n\n      defstart(self):\n          self .simulator .readConfiguration(self .configuration_file)\n          self .cell_types={\n              ' epithelial ':   1 ,\n              ' mesenchymal ':   2 ,\n              ' endothelial ':   3 \n          }\n          selffield=self .simulator .createField(\" collagen_gel \",   0)\n\n      defstep(self ,  mcs):\n          #  EpithelialtoMesenchymalTransition(EMT)\n          forcellinself .simulator .cellList :\n              ifcell .type==self .cell_types [' epithelial ']:\n                  #  CheckifEMTshouldoccurifsome _condition :\n                      cell .type=self .cell_types [' mesenchymal ']\n                      #  Updatecellpropertiesformesenchymalcellscell .lambdaVolume=20 \n                      cell .targetVolume=20 \n\n          #  Mesenchymalcellmigrationforcellinself .simulator .cellList :\n              ifcell .type==self .cell_types [' mesenchymal ']:\n                  #  Applymigrationforcesself .applyForce(cell ,   0 . 1 ,   0 . 1)\n\n          #  Endothelialcelladhesionandcohesionforcellinself .simulator .cellList :\n              ifcell .type==self .cell_types [' endothelial ']:\n                  #  Applyadhesionforcesself .applyForce(cell ,   0 . 2 ,   0 . 2)\n                  #  Applycohesionforcesself .applyForce(cell ,   0 . 15 ,   0 . 15)\n\n          #  Updatecollagengelfieldself .field=self .simulator .updateField(\" collagen_gel \")\n\n defmain():\n      simulator=Simulator()\n      model=Model()\n      simulation=EMTAndCellMigrationSimulation(simulator ,  model)\n      simulator .addSteppable(simulation)\n      simulator .run(100 0)\n\n if__ name__==\"__main __\":\n      main()"
  },
  "output": {
    "output_file": "experiments\\week4-attempt13_20250617_225339_run3\\generated_cc3d_model.cc3d"
  }
}