{
  "timestamp": "2025-06-18T02:59:38.766778",
  "step": "cc3d_file_creation",
  "input": {
    "python_code": "from cc3d.core.PySteppables import *\n\nfrom CompuCellSetup import Simulator\nfrom steppables import *\nfrom steppables import MitosisSteppable\nimport numpy as np\n\nclass EpithelialCellSimulation(SteppableBasePy):\n    def __init__(self, _simulator, _frequency=1):\n        super(EpithelialCellSimulation, self).__init__(_simulator, _frequency)\n        self.simulator = _simulator\n        self.name = \"Epithelial Cell Simulation\"\n        self.duration = 1000  # Total simulation steps\n        self.cell_proliferation_rate = 0.01  # Proliferation rate per cell\n        self.cell_division_rate = 0.005  # Division rate per cell\n\n    def start(self):\n        # Initialize cell field with epithelial cells\n        cell_type = self.simulator.get_cell_type_plugin()\n        cell_type.type_name = \"Epithelial\"\n        cell_type.description = \"Epithelial cell (CL:0000066)\"\n        self.simulator.cell_type_plugins.append(cell_type)\n        \n        # Create initial cell configuration\n        self.simulator.create_cell_field()\n        for x in range(self.simulator.x_dim):\n            for y in range(self.simulator.y_dim):\n                for z in range(self.simulator.z_dim):\n                    self.simulator.cell_field[x, y, z] = cell_type\n\n    def step(self, mcs):\n        # Get current cell count\n        cell_count = self.simulator.cell_field.size\n        print(f\"Step {mcs}: {cell_count} cells\")\n        \n        # Check if simulation should stop\n        if mcs >= self.duration:\n            self.simulator.stop_simulation()\n            \n        # Apply cell proliferation and division logic\n        if cell_count < 500:  # Stop proliferation when reaching 500 cells\n            proliferation_rate = self.cell_proliferation_rate\n            division_rate = self.cell_division_rate\n            for cell in self.simulator.cell_list:\n                if np.random.rand() < proliferation_rate:\n                    # Apply proliferation\n                    pass\n                if np.random.rand() < division_rate:\n                    # Apply division\n                    mitosis_steppable = MitosisSteppable(simulator=self.simulator)\n                    mitosis_steppable.start()\n                    mitosis_steppable.step(mcs)\n                    mitosis_steppable.finish()\n\ndef setup_simulator():\n    simulator = Simulator()\n    simulator.simulation_dims = (100, 100, 1)  # x, y, z dimensions\n    simulator.simulation_time = 1000  # Total simulation steps\n    simulator.save_output_frequency = 10  # Save data every 10 steps\n    simulator.load_objects(\"CompuCellPythonSetup.py\")\n    return simulator\n\nsimulator = setup_simulator()\nsimulator.add_steppable(EpithelialCellSimulation(simulator, 1))\nsimulator.run()"
  },
  "output": {
    "output_file": "experiments\\paper_10_Paper_10_0618_0258_run3\\generated_cc3d_model.cc3d"
  }
}