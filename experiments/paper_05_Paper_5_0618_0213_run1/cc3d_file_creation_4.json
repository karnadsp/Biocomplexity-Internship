{
  "timestamp": "2025-06-18T02:15:32.268478",
  "step": "cc3d_file_creation",
  "input": {
    "python_code": "from cc3d.core.PySteppables import *\n\nfrom CompuCellSetup import Simulator\nfrom steppables import SteppableBasePy\n\nclass Simulation(SteppableBasePy):\n    def __init__(self, _simulator, _frequency=1):\n        SteppableBasePy.__init__(self, _simulator, _frequency)\n        self.simulator = _simulator\n        self.simulator.setSimulationDimensions(50, 50)\n        \n        # Cell type definitions\n        self.cellType = {'Mesenchymal': 1, 'Epithelial': 2}\n        \n        # Gene expression parameters\n        self.biological_process = {'activation': 1.0, 'deactivation': 0.0}\n        self.cdk_activity = {'activation': 1.0, 'deactivation': 0.0}\n        \n        # Cell behavior parameters\n        self.cell_differentiation = {'rate': 0.1, 'threshold': 0.5}\n        self.cell_proliferation = {'rate': 0.05, 'threshold': 0.3}\n\n    def start(self):\n        # Initialize cell field\n        cell_field = self.simulator.get_cell_field()\n        for x in range(self.simulator.get_xextent()):\n            for y in range(self.simulator.get_yextent()):\n                if (x + y) % 2 == 0:\n                    cell_field[x, y] = self.cellType['Mesenchymal']\n                else:\n                    cell_field[x, y] = self.cellType['Epithelial']\n\n    def step(self, mcs):\n        # Update cell behaviors based on simulation rules\n        field = self.simulator.get_cell_field()\n        for x in range(self.simulator.get_xextent()):\n            for y in range(self.simulator.get_yextent()):\n                cell = field[x, y]\n                if cell == self.cellType['Mesenchymal']:\n                    # Apply mesenchymal cell behavior\n                    pass\n                elif cell == self.cellType['Epithelial']:\n                    # Apply epithelial cell behavior\n                    pass\n\n                # Update biological processes\n                self.biological_process['activation'] += 0.01\n                self.biological_process['deactivation'] -= 0.01\n\n                # Update CDK activity\n                self.cdk_activity['activation'] += 0.005\n                self.cdk_activity['deactivation'] -= 0.005\n\n                # Apply cell differentiation rules\n                if self.cell_differentiation['rate'] > self.cell_differentiation['threshold']:\n                    pass\n\n                # Apply cell proliferation rules\n                if self.cell_proliferation['rate'] > self.cell_proliferation['threshold']:\n                    pass\n\nsim = Simulator()\nsim.setSimulationParameters(_simulation_name=\"OntologyBasedSimulation\", _steps=1000)\nsim.add_steerable(\"Simulation\", _frequency=1)\nsim.run()"
  },
  "output": {
    "output_file": "experiments\\paper_05_Paper_5_0618_0213_run1\\generated_cc3d_model.cc3d"
  }
}