{
  "timestamp": "2025-06-18T02:40:35.857322",
  "step": "cc3d_file_creation",
  "input": {
    "python_code": "from cc3d.core.PySteppables import *\n\nfrom CompuCell3D import CompuCellSetup\nfrom steppables import SteppableBasePy\n\nclass EpithelialProliferationSimulation(SteppableBasePy):\n    def __init__(self, _simulator, _frequency=1):\n        SteppableBasePy.__init__(self, _simulator, _frequency)\n        self.simulator = _simulator\n        self.step = 0\n        self.max_steps = 1000\n        \n        # Initialize cell types and properties\n        self.cellType = {'Epithelial': 0}\n        \n        # Set up cell mechanics and parameters\n        self.cellMechanics = {\n            'Epithelial': {\n                'color': [255, 255, 255],\n                'latticeType': 'Hexagon',\n                'mitosisDistance': 3.0,\n                'mitosisGroup': 0,\n                'cellAdhesion': {\n                    'Epithelial': {'strength': 50.0, 'distance': 1.0}\n                }\n            }\n        }\n        \n        # Set up simulation parameters\n        self.simulator.setSimulationDimensions(50, 50, 1)\n        self.simulator.setFieldSize(50, 50, 1)\n        self.simulator.setTimeStep(0.1)\n        self.simulator.setTimeScale(1.0)\n        \n    def start(self):\n        # Initialize cells\n        for x in range(25, 26):\n            for y in range(25, 26):\n                for z in range(0, 1):\n                    cell = self.simulator.createCell(self.cellType['Epithelial'], [x, y, z])\n        \n        # Set up mitosis\n        self.mitosisSteppable = Mitosis(self.simulator, 10, 3, 100)\n        self.simulator.addSteppable(self.mitosisSteppable)\n        \n    def step(self):\n        self.step += 1\n        if self.step >= self.max_steps:\n            self.simulator.stopSimulation()\n            \ndef main():\n    simulator = CompuCellSetup.Simulator()\n    simulation = EpithelialProliferationSimulation(simulator)\n    simulator.addSteppable(simulation)\n    simulator.run(1000)\n    \nif __name__ == \"__main__\":\n    main()"
  },
  "output": {
    "output_file": "experiments\\paper_08_Paper_8_0618_0239_run1\\generated_cc3d_model.cc3d"
  }
}